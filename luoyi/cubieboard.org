#+TITLE: Run Arch Linux With CubieBoard
#+AUTHOR: Luo Yi <luoyi.ly AT gmail.com>

* 安装 ArchLinuxARM 基本系统

** 硬件准备

- 一张 8G 以上的 SD 卡和对应的读卡器，方便我们在 PC 上操作

- USB to TTL 线

- 一台支持 HDMI 输入的显示器或者电视机

- 一个 USB Hub，接上配套的鼠标键盘

** SD 卡分区

我们需要把 SD 卡的全部空间分为 3 部分：

- 32M Free 空间，无任何文件系统格式，主要放 u-Boot 等引导程序。

- 128M ext2/fat16 文件系统，里面放 CubieBoard 引导用的 script.bin 、 uImage 、uEnv.txt 等文件

- 剩余所有的空间分为一个 ext4 文件系统。这是我们的 RootFS。

** 写入 u-Boot 


下载 [[http://dl.linux-sunxi.org/users/amery/sunxi-3.0/latest/cubieboard_hwpack.tar.xz][最新的 CubieBoard HardWare Package]],
解压缩，写入 SD 卡上特定的地址。


#+begin_src sh
[luoyi@qt-luoyi a]$ tar xf cubieboard_hwpack.tar.xz 
[luoyi@qt-luoyi a]$ ls -al
total 9884
drwxr-xr-x  5 luoyi users     4096 May 17 11:59 .
drwxrwxrwt 33 root  root     36864 May 17 11:58 ..
drwxr-xr-x  2 luoyi users     4096 May 17 11:59 bootloader
-rw-r--r--  1 luoyi users 10050012 May 17 11:59 cubieboard_hwpack.tar.xz
drwxr-xr-x  2 luoyi users     4096 May 17 11:59 kernel
drwxr-xr-x  4 luoyi users     4096 May 17 11:59 rootfs
[luoyi@qt-luoyi a]$ tree bootloader/
bootloader/
├── sunxi-spl.bin
└── u-boot.bin

0 directories, 2 files
#+end_src

然后把 bootloader 目录里头的两个文件分别写到 SD 卡上相应的位置：

#+begin_src sh
dd if=sunxi-spl.bin of={sdcard}    bs=1024 seek=8
dd if=u-boot.bin    of={sdcard}    bs=1024 seek=32
#+end_src


** 下载 ArchLinuxArm 的 Tar 包。

ArchLinuxArm 提供了“即插即用”的 CubieBoard 可用的 tgz 包，里头有完整可用的 Kernel 和 rootfs 。下载地址：
[[http://archlinuxarm.org/os/sun4i/cubieboard-bootloader.tar.gz][ArchLinuxARM BootLoader]]
[[http://archlinuxarm.org/os/ArchLinuxARM-sun4i-latest.tar.gz][ArchLinuxARM rootfs]]


* URL
[[http://andre.blaatschaap.be/2013/01/installing-archlinuxarm-on-the-cubieboard/][Installing ArchLinuxARM on the CubieBoard]]

[[http://dl.cubieboard.org/software/android/cubiebox_tvbox_rel2.2.img][能用的 Android]]
[[http://ssvb.github.io/2013/02/01/new-xf86-video-sunxifb-ddx-driver.html][New xf86-video-sunxifb DDX driver for Xorg]]

[[http://rhombus-tech.net/allwinner_a10/][A10 Info]]




#+begin_src sh
[luoyi@qt-luoyi berryboot]$ sudo kpartx -a -v  berryboot-cubieboard-beta6.img 
add map loop0p1 (254:0): 0 122880 linear /dev/loop0 2048
[luoyi@qt-luoyi berryboot]$ sudo mount /dev/mapper/loop0p1 /media/usb/
[luoyi@qt-luoyi usb]$ ls -al
total 29522
drwxr-xr-x 2 root root    16384 Jan  1  1970 .
drwxr-xr-x 3 root root     4096 May  7  2012 ..
-rwxr-xr-x 1 root root  8170528 Mar 21 15:21 berryboot.img
-rwxr-xr-x 1 root root    17764 Mar 21 15:21 bootcode.bin
-rwxr-xr-x 1 root root       64 Mar 21 15:21 cmdline.txt
-rwxr-xr-x 1 root root      163 Mar 21 15:21 config.txt
-rwxr-xr-x 1 root root     2261 Mar 21 15:21 fixup_cd.dat
-rwxr-xr-x 1 root root     5897 Mar 21 15:21 fixup.dat
-rwxr-xr-x 1 root root  3609232 Mar 21 15:21 kernel_a10_aufs.img
-rwxr-xr-x 1 root root  2753200 Mar 21 15:21 kernel_rpi_aufs.img
-rwxr-xr-x 1 root root    30776 Mar 21 15:21 LICENSE.berryboot
-rwxr-xr-x 1 root root    45004 Mar 21 15:21 script.bin
-rwxr-xr-x 1 root root 12294570 Mar 21 15:21 shared.tgz
-rwxr-xr-x 1 root root   569176 Mar 21 15:21 start_cd.elf
-rwxr-xr-x 1 root root  2694708 Mar 21 15:21 start.elf
-rwxr-xr-x 1 root root      413 Mar 21 15:21 uEnv.txt

#+end_src

* Mini USB wifi

#+begin_src sh
[91956.934820] usb 2-1.1: new high-speed USB device number 3 using ehci-pci
[91957.538903] rtl8192cu: Chip version 0x10
[91957.685377] rtl8192cu: MAC address: e8:4e:06:06:7b:43
[91957.685384] rtl8192cu: Board Type 0
[91957.685887] rtlwifi: rx_max_size 15360, rx_urb_num 8, in_ep 1
[91957.685930] rtl8192cu: Loading firmware rtlwifi/rtl8192cufw.bin
[91957.686302] usbcore: registered new interface driver rtl8192cu
[91957.757657] ieee80211 phy1: Selected rate control algorithm 'rtl_rc'
[91957.758124] rtlwifi: wireless switch is on
#+end_src

#+begin_src sh
modprobe lcd && modprobe hdmi && modprobe fbcon
disp.screen0_output_type=3 disp.screen0_output_mode=1920x1080p60
#+end_src
